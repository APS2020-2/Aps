<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>